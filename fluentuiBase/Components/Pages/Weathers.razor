@inject ISender Commander

@rendermode InteractiveServer
@{

}

<LayoutView Layout="typeof(FluentuiLayout)">
    <PageTitle>Weathers</PageTitle>
    <HeadContent>
        <style>
            main { background: #f0f088; }
        </style>
    </HeadContent>
   
    @if (forecastDtos == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <InfiniteScroll ObserverContainerId="itemcontainerid"  ObserverTargetId="itemtargetid" ObservableTargetReached="(e) => FetchForecasts()">
            <ul style="height: 400px; overflow-y: scroll; width: 100%; position:relative " id="itemcontainerid">
                @foreach (var forecast in forecastDtos)
                {
                    <li class="list-group-item"> @forecast.Date: @forecast.TemperatureC-@forecast.TemperatureF (@forecast.Summary)</li>
                }
                @if (!Stop)
                {
                    <li class="list-group-item" id="itemtargetid" style="background-color:orangered"></li>
                }

            </ul>


        </InfiniteScroll>
    }
</LayoutView>




@code {
    [Parameter]
    public int Total { get; set; }

    [Parameter]
    public int Size { get; set; }

    [Parameter]
    public int Start { get; set; } = 1;
    private bool Stop { get; set; }= false;

    private List<WeatherForecastDto> forecastDtos=new List<WeatherForecastDto>();

    protected override async Task OnInitializedAsync()
    {

        //await FetchForecasts();
    }

    private async Task FetchForecasts()
    {

        if(forecastDtos.Count < Total)
        {
            var result = await Commander.Send(new GetWeatherForecastsQuery(Total, Start, Size));


            forecastDtos.AddRange(result.Value);

            Start = forecastDtos.Count + 1;
        }

        if(Start >Total)
        {
            Stop = true;
        }



        
    }

    
}
