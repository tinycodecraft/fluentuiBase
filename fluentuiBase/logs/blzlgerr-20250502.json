{"@t":"2025-05-02T08:24:14.5874052Z","@mt":"Application startup exception","@l":"Fatal","@x":"System.InvalidOperationException: Body was inferred but the method does not allow inferred body parameters.\r\nBelow is the list of parameters that we found: \r\n\r\nParameter           | Source                        \r\n---------------------------------------------------------------------------------\r\ncommander           | Services (Inferred)\r\nlogger              | Body (Inferred)\r\nuserid              | Route (Inferred)\r\nstart               | Query (Attribute)\r\nsize                | Query (Attribute)\r\ntotal               | Query (Attribute)\r\n\r\n\r\nDid you mean to register the \"Body (Inferred)\" parameter(s) as a Service or apply the [FromServices] or [FromBody] attribute?\r\n\r\n\r\n   at Microsoft.AspNetCore.Http.RequestDelegateFactory.CreateArguments(ParameterInfo[] parameters, RequestDelegateFactoryContext factoryContext)\r\n   at Microsoft.AspNetCore.Http.RequestDelegateFactory.CreateArgumentsAndInferMetadata(MethodInfo methodInfo, RequestDelegateFactoryContext factoryContext)\r\n   at Microsoft.AspNetCore.Http.RequestDelegateFactory.InferMetadata(MethodInfo methodInfo, RequestDelegateFactoryOptions options)\r\n   at Microsoft.AspNetCore.Routing.RouteEndpointDataSource.CreateRouteEndpointBuilder(RouteEntry entry, RoutePattern groupPrefix, IReadOnlyList`1 groupConventions, IReadOnlyList`1 groupFinallyConventions)\r\n   at Microsoft.AspNetCore.Routing.RouteEndpointDataSource.GetGroupedEndpoints(RouteGroupContext context)\r\n   at Microsoft.AspNetCore.Routing.RouteGroupBuilder.GroupEndpointDataSource.GetGroupedEndpointsWithNullablePrefix(RoutePattern prefix, IReadOnlyList`1 conventions, IReadOnlyList`1 finallyConventions, IServiceProvider applicationServices)\r\n   at Microsoft.AspNetCore.Routing.RouteGroupBuilder.GroupEndpointDataSource.get_Endpoints()\r\n   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.CreateEndpointsUnsynchronized()\r\n   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.EnsureEndpointsInitialized()\r\n   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.get_Endpoints()\r\n   at Microsoft.AspNetCore.Routing.DataSourceDependentCache`1.Initialize()\r\n   at System.Threading.LazyInitializer.EnsureInitializedCore[T](T& target, Boolean& initialized, Object& syncLock, Func`1 valueFactory)\r\n   at Microsoft.AspNetCore.Routing.DataSourceDependentCache`1.EnsureInitialized()\r\n   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationPolicyCache..ctor(EndpointDataSource dataSource)\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\r\n   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)\r\n   at System.Reflection.MethodBaseInvoker.InvokeWithOneArg(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetService[T](IServiceProvider provider)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware..ctor(RequestDelegate next, IAuthorizationPolicyProvider policyProvider, IServiceProvider services)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddlewareInternal..ctor(RequestDelegate next, IServiceProvider services, IAuthorizationPolicyProvider policyProvider, ILogger`1 logger)\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\r\n   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)\r\n   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at Microsoft.Extensions.Internal.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider provider)\r\n   at Microsoft.Extensions.Internal.ActivatorUtilities.CreateInstance(IServiceProvider provider, Type instanceType, Object[] parameters)\r\n   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.ReflectionMiddlewareBinder.CreateMiddleware(RequestDelegate next)\r\n   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()\r\n   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()\r\n   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)","EventId":{"Id":6},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","ApplicationName":"Blazor Log Base"}
{"@t":"2025-05-02T08:24:14.8083148Z","@mt":"Hosting failed to start","@l":"Error","@x":"System.InvalidOperationException: Body was inferred but the method does not allow inferred body parameters.\r\nBelow is the list of parameters that we found: \r\n\r\nParameter           | Source                        \r\n---------------------------------------------------------------------------------\r\ncommander           | Services (Inferred)\r\nlogger              | Body (Inferred)\r\nuserid              | Route (Inferred)\r\nstart               | Query (Attribute)\r\nsize                | Query (Attribute)\r\ntotal               | Query (Attribute)\r\n\r\n\r\nDid you mean to register the \"Body (Inferred)\" parameter(s) as a Service or apply the [FromServices] or [FromBody] attribute?\r\n\r\n\r\n   at Microsoft.AspNetCore.Http.RequestDelegateFactory.CreateArguments(ParameterInfo[] parameters, RequestDelegateFactoryContext factoryContext)\r\n   at Microsoft.AspNetCore.Http.RequestDelegateFactory.CreateArgumentsAndInferMetadata(MethodInfo methodInfo, RequestDelegateFactoryContext factoryContext)\r\n   at Microsoft.AspNetCore.Http.RequestDelegateFactory.InferMetadata(MethodInfo methodInfo, RequestDelegateFactoryOptions options)\r\n   at Microsoft.AspNetCore.Routing.RouteEndpointDataSource.CreateRouteEndpointBuilder(RouteEntry entry, RoutePattern groupPrefix, IReadOnlyList`1 groupConventions, IReadOnlyList`1 groupFinallyConventions)\r\n   at Microsoft.AspNetCore.Routing.RouteEndpointDataSource.GetGroupedEndpoints(RouteGroupContext context)\r\n   at Microsoft.AspNetCore.Routing.RouteGroupBuilder.GroupEndpointDataSource.GetGroupedEndpointsWithNullablePrefix(RoutePattern prefix, IReadOnlyList`1 conventions, IReadOnlyList`1 finallyConventions, IServiceProvider applicationServices)\r\n   at Microsoft.AspNetCore.Routing.RouteGroupBuilder.GroupEndpointDataSource.get_Endpoints()\r\n   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.CreateEndpointsUnsynchronized()\r\n   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.EnsureEndpointsInitialized()\r\n   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.get_Endpoints()\r\n   at Microsoft.AspNetCore.Routing.DataSourceDependentCache`1.Initialize()\r\n   at System.Threading.LazyInitializer.EnsureInitializedCore[T](T& target, Boolean& initialized, Object& syncLock, Func`1 valueFactory)\r\n   at Microsoft.AspNetCore.Routing.DataSourceDependentCache`1.EnsureInitialized()\r\n   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationPolicyCache..ctor(EndpointDataSource dataSource)\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\r\n   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)\r\n   at System.Reflection.MethodBaseInvoker.InvokeWithOneArg(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetService[T](IServiceProvider provider)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware..ctor(RequestDelegate next, IAuthorizationPolicyProvider policyProvider, IServiceProvider services)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddlewareInternal..ctor(RequestDelegate next, IServiceProvider services, IAuthorizationPolicyProvider policyProvider, ILogger`1 logger)\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\r\n   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)\r\n   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at Microsoft.Extensions.Internal.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider provider)\r\n   at Microsoft.Extensions.Internal.ActivatorUtilities.CreateInstance(IServiceProvider provider, Type instanceType, Object[] parameters)\r\n   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.ReflectionMiddlewareBinder.CreateMiddleware(RequestDelegate next)\r\n   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()\r\n   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()\r\n   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)\r\n   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__15_1(IHostedService service, CancellationToken token)\r\n   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)","EventId":{"Id":11,"Name":"HostedServiceStartupFaulted"},"SourceContext":"Microsoft.Extensions.Hosting.Internal.Host","ApplicationName":"Blazor Log Base"}
{"@t":"2025-05-02T08:33:05.8309687Z","@mt":"Application startup exception","@l":"Fatal","@x":"System.InvalidOperationException: Body was inferred but the method does not allow inferred body parameters.\r\nBelow is the list of parameters that we found: \r\n\r\nParameter           | Source                        \r\n---------------------------------------------------------------------------------\r\ncommander           | Services (Inferred)\r\nlogger              | Body (Inferred)\r\nuserid              | Route (Inferred)\r\nstart               | Query (Attribute)\r\nsize                | Query (Attribute)\r\ntotal               | Query (Attribute)\r\n\r\n\r\nDid you mean to register the \"Body (Inferred)\" parameter(s) as a Service or apply the [FromServices] or [FromBody] attribute?\r\n\r\n\r\n   at Microsoft.AspNetCore.Http.RequestDelegateFactory.CreateArguments(ParameterInfo[] parameters, RequestDelegateFactoryContext factoryContext)\r\n   at Microsoft.AspNetCore.Http.RequestDelegateFactory.CreateArgumentsAndInferMetadata(MethodInfo methodInfo, RequestDelegateFactoryContext factoryContext)\r\n   at Microsoft.AspNetCore.Http.RequestDelegateFactory.InferMetadata(MethodInfo methodInfo, RequestDelegateFactoryOptions options)\r\n   at Microsoft.AspNetCore.Routing.RouteEndpointDataSource.CreateRouteEndpointBuilder(RouteEntry entry, RoutePattern groupPrefix, IReadOnlyList`1 groupConventions, IReadOnlyList`1 groupFinallyConventions)\r\n   at Microsoft.AspNetCore.Routing.RouteEndpointDataSource.GetGroupedEndpoints(RouteGroupContext context)\r\n   at Microsoft.AspNetCore.Routing.RouteGroupBuilder.GroupEndpointDataSource.GetGroupedEndpointsWithNullablePrefix(RoutePattern prefix, IReadOnlyList`1 conventions, IReadOnlyList`1 finallyConventions, IServiceProvider applicationServices)\r\n   at Microsoft.AspNetCore.Routing.RouteGroupBuilder.GroupEndpointDataSource.get_Endpoints()\r\n   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.CreateEndpointsUnsynchronized()\r\n   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.EnsureEndpointsInitialized()\r\n   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.get_Endpoints()\r\n   at Microsoft.AspNetCore.Routing.DataSourceDependentCache`1.Initialize()\r\n   at System.Threading.LazyInitializer.EnsureInitializedCore[T](T& target, Boolean& initialized, Object& syncLock, Func`1 valueFactory)\r\n   at Microsoft.AspNetCore.Routing.DataSourceDependentCache`1.EnsureInitialized()\r\n   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationPolicyCache..ctor(EndpointDataSource dataSource)\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\r\n   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)\r\n   at System.Reflection.MethodBaseInvoker.InvokeWithOneArg(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetService[T](IServiceProvider provider)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware..ctor(RequestDelegate next, IAuthorizationPolicyProvider policyProvider, IServiceProvider services)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddlewareInternal..ctor(RequestDelegate next, IServiceProvider services, IAuthorizationPolicyProvider policyProvider, ILogger`1 logger)\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\r\n   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)\r\n   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at Microsoft.Extensions.Internal.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider provider)\r\n   at Microsoft.Extensions.Internal.ActivatorUtilities.CreateInstance(IServiceProvider provider, Type instanceType, Object[] parameters)\r\n   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.ReflectionMiddlewareBinder.CreateMiddleware(RequestDelegate next)\r\n   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()\r\n   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()\r\n   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)","EventId":{"Id":6},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","ApplicationName":"Blazor Log Base"}
{"@t":"2025-05-02T08:33:06.0673886Z","@mt":"Hosting failed to start","@l":"Error","@x":"System.InvalidOperationException: Body was inferred but the method does not allow inferred body parameters.\r\nBelow is the list of parameters that we found: \r\n\r\nParameter           | Source                        \r\n---------------------------------------------------------------------------------\r\ncommander           | Services (Inferred)\r\nlogger              | Body (Inferred)\r\nuserid              | Route (Inferred)\r\nstart               | Query (Attribute)\r\nsize                | Query (Attribute)\r\ntotal               | Query (Attribute)\r\n\r\n\r\nDid you mean to register the \"Body (Inferred)\" parameter(s) as a Service or apply the [FromServices] or [FromBody] attribute?\r\n\r\n\r\n   at Microsoft.AspNetCore.Http.RequestDelegateFactory.CreateArguments(ParameterInfo[] parameters, RequestDelegateFactoryContext factoryContext)\r\n   at Microsoft.AspNetCore.Http.RequestDelegateFactory.CreateArgumentsAndInferMetadata(MethodInfo methodInfo, RequestDelegateFactoryContext factoryContext)\r\n   at Microsoft.AspNetCore.Http.RequestDelegateFactory.InferMetadata(MethodInfo methodInfo, RequestDelegateFactoryOptions options)\r\n   at Microsoft.AspNetCore.Routing.RouteEndpointDataSource.CreateRouteEndpointBuilder(RouteEntry entry, RoutePattern groupPrefix, IReadOnlyList`1 groupConventions, IReadOnlyList`1 groupFinallyConventions)\r\n   at Microsoft.AspNetCore.Routing.RouteEndpointDataSource.GetGroupedEndpoints(RouteGroupContext context)\r\n   at Microsoft.AspNetCore.Routing.RouteGroupBuilder.GroupEndpointDataSource.GetGroupedEndpointsWithNullablePrefix(RoutePattern prefix, IReadOnlyList`1 conventions, IReadOnlyList`1 finallyConventions, IServiceProvider applicationServices)\r\n   at Microsoft.AspNetCore.Routing.RouteGroupBuilder.GroupEndpointDataSource.get_Endpoints()\r\n   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.CreateEndpointsUnsynchronized()\r\n   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.EnsureEndpointsInitialized()\r\n   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.get_Endpoints()\r\n   at Microsoft.AspNetCore.Routing.DataSourceDependentCache`1.Initialize()\r\n   at System.Threading.LazyInitializer.EnsureInitializedCore[T](T& target, Boolean& initialized, Object& syncLock, Func`1 valueFactory)\r\n   at Microsoft.AspNetCore.Routing.DataSourceDependentCache`1.EnsureInitialized()\r\n   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationPolicyCache..ctor(EndpointDataSource dataSource)\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\r\n   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)\r\n   at System.Reflection.MethodBaseInvoker.InvokeWithOneArg(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetService[T](IServiceProvider provider)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware..ctor(RequestDelegate next, IAuthorizationPolicyProvider policyProvider, IServiceProvider services)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddlewareInternal..ctor(RequestDelegate next, IServiceProvider services, IAuthorizationPolicyProvider policyProvider, ILogger`1 logger)\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\r\n   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)\r\n   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at Microsoft.Extensions.Internal.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider provider)\r\n   at Microsoft.Extensions.Internal.ActivatorUtilities.CreateInstance(IServiceProvider provider, Type instanceType, Object[] parameters)\r\n   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.ReflectionMiddlewareBinder.CreateMiddleware(RequestDelegate next)\r\n   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()\r\n   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()\r\n   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)\r\n   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__15_1(IHostedService service, CancellationToken token)\r\n   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)","EventId":{"Id":11,"Name":"HostedServiceStartupFaulted"},"SourceContext":"Microsoft.Extensions.Hosting.Internal.Host","ApplicationName":"Blazor Log Base"}
{"@t":"2025-05-02T08:38:04.0911662Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["6.9361"],"@l":"Error","@x":"System.InvalidOperationException: No service for type 'Microsoft.Extensions.Logging.ILogger' has been registered.\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)\r\n   at lambda_method73(Closure, Object, HttpContext)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)","@tr":"71cbc3d00f2eb5ec13e67ab7b9c3664f","@sp":"3002c6a112da77f1","LocalTime":"20250502+163804","RequestMethod":"GET","RequestPath":"/api/weathers/all/ray/","StatusCode":500,"Elapsed":6.9361,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNC9AIB60377:00000013","ConnectionId":"0HNC9AIB60377","ClientIp":"::1","MyExpense":null,"ApplicationName":"Blazor Log Base"}
{"@t":"2025-05-02T08:38:04.2261790Z","@mt":"=== Error happens to Request Info ===\r\nmethod = GET\r\npath = /api/weathers/all/ray/\r\n-- headers\r\nheader = Accept    value = text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\r\nheader = Host    value = localhost:51596\r\nheader = User-Agent    value = Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36\r\nheader = Accept-Encoding    value = gzip, deflate, br, zstd\r\nheader = Accept-Language    value = zh-TW,zh;q=0.9,en-US;q=0.8,en;q=0.7\r\nheader = Cookie    value = blazelogBase.Antiforgery=CfDJ8KVr00SsPNlPoOqvtk4QFd221BGyzw-Te2iswfakS4T94jXlOU6ePVDdvOAviBEn8SyftKuHi7MV0JcAE-wbS0BaQFGIxVWFKk11USxwxVy353zNt97_WZKE1C0YWXkCQGU3LcFvVHXXkwUoEUQ-xCM; .AspNetCore.Culture=c%3Dzh-HK%7Cuic%3Dzh-HK; HYD.AuthorizeCookie_Key=CfDJ8KVr00SsPNlPoOqvtk4QFd0U090lYgFwjMk4-TWNb8UtBEjKFFHt6fW6q_JiFzhzfpZSbNsLjCBm1Dmbdn5PBPYgyot_ESPSO6YGE58wPRdNYxh2BzHsIAB7hp9xVv65DJ9n_kKq_zgp1ZN0_0jsemfLuzTQ-DPjimgeXqsuz4vPThCbzr7ODR0Etr9b0dKNb7hJbszc_nNtceWcCFoasZsN-eQl3hdXk5i8Ftv9N_zGmqzL0Z9xvHnP0KcfMGiFh0VjLblSHEgW5L6snij_mAWyJ_6Z7xY7_3E07YPATyMFbWZFYr8BARH6b5ak66sS5IV2RQL3Qh0GkOxjmoXutknxPQPacLtM1KubOhOwQTv80eGhNUrqTNFiAguB3LlAJ-1AFxs5Ymr4eBUubB3Eu6GLx9A_szbKSmhxf8q0obOUsPf1d3SwqpKwXJPqFQvAXCN7tdGWxuBWPDq8wrxtG9FYUKtx31p_m_eMF1XSFcB3ahVHl97ZTh_31gHk8wg3Shnjqb0ue37BDazGvUE8LfTs08nsPj8o_dw4DSc9aBf1_JNdxPZZiLy6qaxKaCZ71e1MlGqBun6i3O1GHFDUWSbO82_E_atGGQ9flhJ_8Vauh2r0wDE7thsqkONakWz5u18WGM_REOS0H4jt-N1uzHawn9eA_KXPGoXvJ3O7wDYVOjNjMcybvsRChh8YZ1YMDH959t20xCpSTJ8VdPThf0yCqA2L1bM2Ku1Hisb10ZXyVg5pEbzGmUhAn2pxb372x3AVVLX3l1-qn0opZOdZK8Tz_yQ0Ek32SwhIAxIaJeMJo3s_Pr_YQyCjXujcuBx2wyk779pBfXbDyVcUJXcEOoWrR7GAcaj2rOTE5UdBzU-mv0qWt43olV8482hRdIgMgc2R2H-l2idfYHu-30VQLtt_07gYNFPxxAN9l1eEZrZJ\r\nheader = Upgrade-Insecure-Requests    value = 1\r\nheader = sec-ch-ua    value = \"Google Chrome\";v=\"135\", \"Not-A.Brand\";v=\"8\", \"Chromium\";v=\"135\"\r\nheader = sec-ch-ua-mobile    value = ?0\r\nheader = sec-ch-ua-platform    value = \"Windows\"\r\nheader = sec-fetch-site    value = none\r\nheader = sec-fetch-mode    value = navigate\r\nheader = sec-fetch-user    value = ?1\r\nheader = sec-fetch-dest    value = document\r\nheader = priority    value = u=0, i\r\n","@l":"Error","@tr":"71cbc3d00f2eb5ec13e67ab7b9c3664f","@sp":"3002c6a112da77f1","SourceContext":"fluentuiBase.Middlewares.ApiExceptionHandlingMiddleware","RequestId":"0HNC9AIB60377:00000013","RequestPath":"/api/weathers/all/ray/","ConnectionId":"0HNC9AIB60377","ClientIp":"::1","MyExpense":null,"ApplicationName":"Blazor Log Base"}
{"@t":"2025-05-02T08:38:04.2357313Z","@mt":"An unhandled exception has occurred, No service for type 'Microsoft.Extensions.Logging.ILogger' has been registered.","@l":"Error","@x":"System.InvalidOperationException: No service for type 'Microsoft.Extensions.Logging.ILogger' has been registered.\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)\r\n   at lambda_method73(Closure, Object, HttpContext)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)\r\n   at fluentuiBase.Middlewares.ApiExceptionHandlingMiddleware.Invoke(HttpContext context) in C:\\data\\sources\\dotwork\\fluentuiBase\\fluentuiBase\\Middlewares\\ApiExceptionHandlingMiddleware.cs:line 37","@tr":"71cbc3d00f2eb5ec13e67ab7b9c3664f","@sp":"3002c6a112da77f1","SourceContext":"fluentuiBase.Middlewares.ApiExceptionHandlingMiddleware","RequestId":"0HNC9AIB60377:00000013","RequestPath":"/api/weathers/all/ray/","ConnectionId":"0HNC9AIB60377","ClientIp":"::1","MyExpense":null,"ApplicationName":"Blazor Log Base"}
{"@t":"2025-05-02T08:38:39.0519310Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.3602"],"@l":"Error","@x":"System.InvalidOperationException: No service for type 'Microsoft.Extensions.Logging.ILogger' has been registered.\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)\r\n   at lambda_method73(Closure, Object, HttpContext)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)","@tr":"199d04133d8357237803c2331af8450b","@sp":"7d8d30eb4d0a1db7","LocalTime":"20250502+163839","RequestMethod":"GET","RequestPath":"/api/weathers/all/ray","StatusCode":500,"Elapsed":1.3602,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNC9AIB60377:00000017","ConnectionId":"0HNC9AIB60377","ClientIp":"::1","MyExpense":null,"ApplicationName":"Blazor Log Base"}
{"@t":"2025-05-02T08:38:39.0830850Z","@mt":"=== Error happens to Request Info ===\r\nmethod = GET\r\npath = /api/weathers/all/ray\r\n-- headers\r\nheader = Accept    value = text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\r\nheader = Host    value = localhost:51596\r\nheader = User-Agent    value = Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36\r\nheader = Accept-Encoding    value = gzip, deflate, br, zstd\r\nheader = Accept-Language    value = zh-TW,zh;q=0.9,en-US;q=0.8,en;q=0.7\r\nheader = Cookie    value = blazelogBase.Antiforgery=CfDJ8KVr00SsPNlPoOqvtk4QFd221BGyzw-Te2iswfakS4T94jXlOU6ePVDdvOAviBEn8SyftKuHi7MV0JcAE-wbS0BaQFGIxVWFKk11USxwxVy353zNt97_WZKE1C0YWXkCQGU3LcFvVHXXkwUoEUQ-xCM; .AspNetCore.Culture=c%3Dzh-HK%7Cuic%3Dzh-HK; HYD.AuthorizeCookie_Key=CfDJ8KVr00SsPNlPoOqvtk4QFd0U090lYgFwjMk4-TWNb8UtBEjKFFHt6fW6q_JiFzhzfpZSbNsLjCBm1Dmbdn5PBPYgyot_ESPSO6YGE58wPRdNYxh2BzHsIAB7hp9xVv65DJ9n_kKq_zgp1ZN0_0jsemfLuzTQ-DPjimgeXqsuz4vPThCbzr7ODR0Etr9b0dKNb7hJbszc_nNtceWcCFoasZsN-eQl3hdXk5i8Ftv9N_zGmqzL0Z9xvHnP0KcfMGiFh0VjLblSHEgW5L6snij_mAWyJ_6Z7xY7_3E07YPATyMFbWZFYr8BARH6b5ak66sS5IV2RQL3Qh0GkOxjmoXutknxPQPacLtM1KubOhOwQTv80eGhNUrqTNFiAguB3LlAJ-1AFxs5Ymr4eBUubB3Eu6GLx9A_szbKSmhxf8q0obOUsPf1d3SwqpKwXJPqFQvAXCN7tdGWxuBWPDq8wrxtG9FYUKtx31p_m_eMF1XSFcB3ahVHl97ZTh_31gHk8wg3Shnjqb0ue37BDazGvUE8LfTs08nsPj8o_dw4DSc9aBf1_JNdxPZZiLy6qaxKaCZ71e1MlGqBun6i3O1GHFDUWSbO82_E_atGGQ9flhJ_8Vauh2r0wDE7thsqkONakWz5u18WGM_REOS0H4jt-N1uzHawn9eA_KXPGoXvJ3O7wDYVOjNjMcybvsRChh8YZ1YMDH959t20xCpSTJ8VdPThf0yCqA2L1bM2Ku1Hisb10ZXyVg5pEbzGmUhAn2pxb372x3AVVLX3l1-qn0opZOdZK8Tz_yQ0Ek32SwhIAxIaJeMJo3s_Pr_YQyCjXujcuBx2wyk779pBfXbDyVcUJXcEOoWrR7GAcaj2rOTE5UdBzU-mv0qWt43olV8482hRdIgMgc2R2H-l2idfYHu-30VQLtt_07gYNFPxxAN9l1eEZrZJ\r\nheader = Upgrade-Insecure-Requests    value = 1\r\nheader = sec-ch-ua    value = \"Google Chrome\";v=\"135\", \"Not-A.Brand\";v=\"8\", \"Chromium\";v=\"135\"\r\nheader = sec-ch-ua-mobile    value = ?0\r\nheader = sec-ch-ua-platform    value = \"Windows\"\r\nheader = sec-fetch-site    value = none\r\nheader = sec-fetch-mode    value = navigate\r\nheader = sec-fetch-user    value = ?1\r\nheader = sec-fetch-dest    value = document\r\nheader = priority    value = u=0, i\r\n","@l":"Error","@tr":"199d04133d8357237803c2331af8450b","@sp":"7d8d30eb4d0a1db7","SourceContext":"fluentuiBase.Middlewares.ApiExceptionHandlingMiddleware","RequestId":"0HNC9AIB60377:00000017","RequestPath":"/api/weathers/all/ray","ConnectionId":"0HNC9AIB60377","ClientIp":"::1","MyExpense":null,"ApplicationName":"Blazor Log Base"}
{"@t":"2025-05-02T08:38:39.0873772Z","@mt":"An unhandled exception has occurred, No service for type 'Microsoft.Extensions.Logging.ILogger' has been registered.","@l":"Error","@x":"System.InvalidOperationException: No service for type 'Microsoft.Extensions.Logging.ILogger' has been registered.\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)\r\n   at lambda_method73(Closure, Object, HttpContext)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)\r\n   at fluentuiBase.Middlewares.ApiExceptionHandlingMiddleware.Invoke(HttpContext context) in C:\\data\\sources\\dotwork\\fluentuiBase\\fluentuiBase\\Middlewares\\ApiExceptionHandlingMiddleware.cs:line 37","@tr":"199d04133d8357237803c2331af8450b","@sp":"7d8d30eb4d0a1db7","SourceContext":"fluentuiBase.Middlewares.ApiExceptionHandlingMiddleware","RequestId":"0HNC9AIB60377:00000017","RequestPath":"/api/weathers/all/ray","ConnectionId":"0HNC9AIB60377","ClientIp":"::1","MyExpense":null,"ApplicationName":"Blazor Log Base"}
{"@t":"2025-05-02T08:42:19.8733235Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["6.9719"],"@l":"Error","@x":"System.InvalidOperationException: No service for type 'Microsoft.Extensions.Logging.ILogger' has been registered.\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)\r\n   at lambda_method73(Closure, Object, HttpContext)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)","@tr":"f7cb4edf8453575e63d7fc8e07dac007","@sp":"858046ef0712f064","LocalTime":"20250502+164219","RequestMethod":"GET","RequestPath":"/api/weathers/ray","StatusCode":500,"Elapsed":6.9719,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNC9AKNN8GLU:00000013","ConnectionId":"0HNC9AKNN8GLU","ClientIp":"::1","MyExpense":null,"ApplicationName":"Blazor Log Base"}
{"@t":"2025-05-02T08:42:19.9761912Z","@mt":"=== Error happens to Request Info ===\r\nmethod = GET\r\npath = /api/weathers/ray\r\n-- headers\r\nheader = Accept    value = text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\r\nheader = Host    value = localhost:51596\r\nheader = User-Agent    value = Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36\r\nheader = Accept-Encoding    value = gzip, deflate, br, zstd\r\nheader = Accept-Language    value = zh-TW,zh;q=0.9,en-US;q=0.8,en;q=0.7\r\nheader = Cookie    value = blazelogBase.Antiforgery=CfDJ8KVr00SsPNlPoOqvtk4QFd221BGyzw-Te2iswfakS4T94jXlOU6ePVDdvOAviBEn8SyftKuHi7MV0JcAE-wbS0BaQFGIxVWFKk11USxwxVy353zNt97_WZKE1C0YWXkCQGU3LcFvVHXXkwUoEUQ-xCM; .AspNetCore.Culture=c%3Dzh-HK%7Cuic%3Dzh-HK; HYD.AuthorizeCookie_Key=CfDJ8KVr00SsPNlPoOqvtk4QFd0U090lYgFwjMk4-TWNb8UtBEjKFFHt6fW6q_JiFzhzfpZSbNsLjCBm1Dmbdn5PBPYgyot_ESPSO6YGE58wPRdNYxh2BzHsIAB7hp9xVv65DJ9n_kKq_zgp1ZN0_0jsemfLuzTQ-DPjimgeXqsuz4vPThCbzr7ODR0Etr9b0dKNb7hJbszc_nNtceWcCFoasZsN-eQl3hdXk5i8Ftv9N_zGmqzL0Z9xvHnP0KcfMGiFh0VjLblSHEgW5L6snij_mAWyJ_6Z7xY7_3E07YPATyMFbWZFYr8BARH6b5ak66sS5IV2RQL3Qh0GkOxjmoXutknxPQPacLtM1KubOhOwQTv80eGhNUrqTNFiAguB3LlAJ-1AFxs5Ymr4eBUubB3Eu6GLx9A_szbKSmhxf8q0obOUsPf1d3SwqpKwXJPqFQvAXCN7tdGWxuBWPDq8wrxtG9FYUKtx31p_m_eMF1XSFcB3ahVHl97ZTh_31gHk8wg3Shnjqb0ue37BDazGvUE8LfTs08nsPj8o_dw4DSc9aBf1_JNdxPZZiLy6qaxKaCZ71e1MlGqBun6i3O1GHFDUWSbO82_E_atGGQ9flhJ_8Vauh2r0wDE7thsqkONakWz5u18WGM_REOS0H4jt-N1uzHawn9eA_KXPGoXvJ3O7wDYVOjNjMcybvsRChh8YZ1YMDH959t20xCpSTJ8VdPThf0yCqA2L1bM2Ku1Hisb10ZXyVg5pEbzGmUhAn2pxb372x3AVVLX3l1-qn0opZOdZK8Tz_yQ0Ek32SwhIAxIaJeMJo3s_Pr_YQyCjXujcuBx2wyk779pBfXbDyVcUJXcEOoWrR7GAcaj2rOTE5UdBzU-mv0qWt43olV8482hRdIgMgc2R2H-l2idfYHu-30VQLtt_07gYNFPxxAN9l1eEZrZJ\r\nheader = Upgrade-Insecure-Requests    value = 1\r\nheader = sec-ch-ua    value = \"Google Chrome\";v=\"135\", \"Not-A.Brand\";v=\"8\", \"Chromium\";v=\"135\"\r\nheader = sec-ch-ua-mobile    value = ?0\r\nheader = sec-ch-ua-platform    value = \"Windows\"\r\nheader = sec-fetch-site    value = none\r\nheader = sec-fetch-mode    value = navigate\r\nheader = sec-fetch-user    value = ?1\r\nheader = sec-fetch-dest    value = document\r\nheader = priority    value = u=0, i\r\n","@l":"Error","@tr":"f7cb4edf8453575e63d7fc8e07dac007","@sp":"858046ef0712f064","SourceContext":"fluentuiBase.Middlewares.ApiExceptionHandlingMiddleware","RequestId":"0HNC9AKNN8GLU:00000013","RequestPath":"/api/weathers/ray","ConnectionId":"0HNC9AKNN8GLU","ClientIp":"::1","MyExpense":null,"ApplicationName":"Blazor Log Base"}
{"@t":"2025-05-02T08:42:19.9858329Z","@mt":"An unhandled exception has occurred, No service for type 'Microsoft.Extensions.Logging.ILogger' has been registered.","@l":"Error","@x":"System.InvalidOperationException: No service for type 'Microsoft.Extensions.Logging.ILogger' has been registered.\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)\r\n   at lambda_method73(Closure, Object, HttpContext)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)\r\n   at fluentuiBase.Middlewares.ApiExceptionHandlingMiddleware.Invoke(HttpContext context) in C:\\data\\sources\\dotwork\\fluentuiBase\\fluentuiBase\\Middlewares\\ApiExceptionHandlingMiddleware.cs:line 37","@tr":"f7cb4edf8453575e63d7fc8e07dac007","@sp":"858046ef0712f064","SourceContext":"fluentuiBase.Middlewares.ApiExceptionHandlingMiddleware","RequestId":"0HNC9AKNN8GLU:00000013","RequestPath":"/api/weathers/ray","ConnectionId":"0HNC9AKNN8GLU","ClientIp":"::1","MyExpense":null,"ApplicationName":"Blazor Log Base"}
{"@t":"2025-05-02T08:44:41.1714890Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["5.3563"],"@l":"Error","@x":"System.InvalidOperationException: No service for type 'Microsoft.Extensions.Logging.ILogger' has been registered.\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)\r\n   at lambda_method75(Closure, Object, HttpContext)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)","@tr":"d06006085dbf4853b5b6c941ea68995c","@sp":"611802a496a78f8c","LocalTime":"20250502+164441","RequestMethod":"GET","RequestPath":"/api/weathers/ray/","StatusCode":500,"Elapsed":5.3563,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNC9ALR902BB:00000017","ConnectionId":"0HNC9ALR902BB","ClientIp":"::1","MyExpense":null,"ApplicationName":"Blazor Log Base"}
{"@t":"2025-05-02T08:44:41.2781077Z","@mt":"=== Error happens to Request Info ===\r\nmethod = GET\r\npath = /api/weathers/ray/\r\n-- headers\r\nheader = Accept    value = text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\r\nheader = Host    value = localhost:51596\r\nheader = User-Agent    value = Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36\r\nheader = Accept-Encoding    value = gzip, deflate, br, zstd\r\nheader = Accept-Language    value = zh-TW,zh;q=0.9,en-US;q=0.8,en;q=0.7\r\nheader = Cookie    value = blazelogBase.Antiforgery=CfDJ8KVr00SsPNlPoOqvtk4QFd221BGyzw-Te2iswfakS4T94jXlOU6ePVDdvOAviBEn8SyftKuHi7MV0JcAE-wbS0BaQFGIxVWFKk11USxwxVy353zNt97_WZKE1C0YWXkCQGU3LcFvVHXXkwUoEUQ-xCM; .AspNetCore.Culture=c%3Dzh-HK%7Cuic%3Dzh-HK; HYD.AuthorizeCookie_Key=CfDJ8KVr00SsPNlPoOqvtk4QFd0U090lYgFwjMk4-TWNb8UtBEjKFFHt6fW6q_JiFzhzfpZSbNsLjCBm1Dmbdn5PBPYgyot_ESPSO6YGE58wPRdNYxh2BzHsIAB7hp9xVv65DJ9n_kKq_zgp1ZN0_0jsemfLuzTQ-DPjimgeXqsuz4vPThCbzr7ODR0Etr9b0dKNb7hJbszc_nNtceWcCFoasZsN-eQl3hdXk5i8Ftv9N_zGmqzL0Z9xvHnP0KcfMGiFh0VjLblSHEgW5L6snij_mAWyJ_6Z7xY7_3E07YPATyMFbWZFYr8BARH6b5ak66sS5IV2RQL3Qh0GkOxjmoXutknxPQPacLtM1KubOhOwQTv80eGhNUrqTNFiAguB3LlAJ-1AFxs5Ymr4eBUubB3Eu6GLx9A_szbKSmhxf8q0obOUsPf1d3SwqpKwXJPqFQvAXCN7tdGWxuBWPDq8wrxtG9FYUKtx31p_m_eMF1XSFcB3ahVHl97ZTh_31gHk8wg3Shnjqb0ue37BDazGvUE8LfTs08nsPj8o_dw4DSc9aBf1_JNdxPZZiLy6qaxKaCZ71e1MlGqBun6i3O1GHFDUWSbO82_E_atGGQ9flhJ_8Vauh2r0wDE7thsqkONakWz5u18WGM_REOS0H4jt-N1uzHawn9eA_KXPGoXvJ3O7wDYVOjNjMcybvsRChh8YZ1YMDH959t20xCpSTJ8VdPThf0yCqA2L1bM2Ku1Hisb10ZXyVg5pEbzGmUhAn2pxb372x3AVVLX3l1-qn0opZOdZK8Tz_yQ0Ek32SwhIAxIaJeMJo3s_Pr_YQyCjXujcuBx2wyk779pBfXbDyVcUJXcEOoWrR7GAcaj2rOTE5UdBzU-mv0qWt43olV8482hRdIgMgc2R2H-l2idfYHu-30VQLtt_07gYNFPxxAN9l1eEZrZJ\r\nheader = Upgrade-Insecure-Requests    value = 1\r\nheader = sec-ch-ua    value = \"Google Chrome\";v=\"135\", \"Not-A.Brand\";v=\"8\", \"Chromium\";v=\"135\"\r\nheader = sec-ch-ua-mobile    value = ?0\r\nheader = sec-ch-ua-platform    value = \"Windows\"\r\nheader = sec-fetch-site    value = none\r\nheader = sec-fetch-mode    value = navigate\r\nheader = sec-fetch-user    value = ?1\r\nheader = sec-fetch-dest    value = document\r\nheader = priority    value = u=0, i\r\n","@l":"Error","@tr":"d06006085dbf4853b5b6c941ea68995c","@sp":"611802a496a78f8c","SourceContext":"fluentuiBase.Middlewares.ApiExceptionHandlingMiddleware","RequestId":"0HNC9ALR902BB:00000017","RequestPath":"/api/weathers/ray/","ConnectionId":"0HNC9ALR902BB","ClientIp":"::1","MyExpense":null,"ApplicationName":"Blazor Log Base"}
{"@t":"2025-05-02T08:44:41.2867533Z","@mt":"An unhandled exception has occurred, No service for type 'Microsoft.Extensions.Logging.ILogger' has been registered.","@l":"Error","@x":"System.InvalidOperationException: No service for type 'Microsoft.Extensions.Logging.ILogger' has been registered.\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)\r\n   at lambda_method75(Closure, Object, HttpContext)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)\r\n   at fluentuiBase.Middlewares.ApiExceptionHandlingMiddleware.Invoke(HttpContext context) in C:\\data\\sources\\dotwork\\fluentuiBase\\fluentuiBase\\Middlewares\\ApiExceptionHandlingMiddleware.cs:line 37","@tr":"d06006085dbf4853b5b6c941ea68995c","@sp":"611802a496a78f8c","SourceContext":"fluentuiBase.Middlewares.ApiExceptionHandlingMiddleware","RequestId":"0HNC9ALR902BB:00000017","RequestPath":"/api/weathers/ray/","ConnectionId":"0HNC9ALR902BB","ClientIp":"::1","MyExpense":null,"ApplicationName":"Blazor Log Base"}
{"@t":"2025-05-02T08:45:02.2400131Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.1706"],"@l":"Error","@x":"System.InvalidOperationException: No service for type 'Microsoft.Extensions.Logging.ILogger' has been registered.\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)\r\n   at lambda_method75(Closure, Object, HttpContext)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)","@tr":"5132a23fa8fb046fac69f8e0f055b80c","@sp":"3259ec0fc97598ba","LocalTime":"20250502+164502","RequestMethod":"GET","RequestPath":"/api/weathers/ray","StatusCode":500,"Elapsed":1.1706,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HNC9ALR902BB:00000019","ConnectionId":"0HNC9ALR902BB","ClientIp":"::1","MyExpense":null,"ApplicationName":"Blazor Log Base"}
{"@t":"2025-05-02T08:45:02.2677218Z","@mt":"=== Error happens to Request Info ===\r\nmethod = GET\r\npath = /api/weathers/ray\r\n-- headers\r\nheader = Accept    value = text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\r\nheader = Host    value = localhost:51596\r\nheader = User-Agent    value = Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36\r\nheader = Accept-Encoding    value = gzip, deflate, br, zstd\r\nheader = Accept-Language    value = zh-TW,zh;q=0.9,en-US;q=0.8,en;q=0.7\r\nheader = Cookie    value = blazelogBase.Antiforgery=CfDJ8KVr00SsPNlPoOqvtk4QFd221BGyzw-Te2iswfakS4T94jXlOU6ePVDdvOAviBEn8SyftKuHi7MV0JcAE-wbS0BaQFGIxVWFKk11USxwxVy353zNt97_WZKE1C0YWXkCQGU3LcFvVHXXkwUoEUQ-xCM; .AspNetCore.Culture=c%3Dzh-HK%7Cuic%3Dzh-HK; HYD.AuthorizeCookie_Key=CfDJ8KVr00SsPNlPoOqvtk4QFd0U090lYgFwjMk4-TWNb8UtBEjKFFHt6fW6q_JiFzhzfpZSbNsLjCBm1Dmbdn5PBPYgyot_ESPSO6YGE58wPRdNYxh2BzHsIAB7hp9xVv65DJ9n_kKq_zgp1ZN0_0jsemfLuzTQ-DPjimgeXqsuz4vPThCbzr7ODR0Etr9b0dKNb7hJbszc_nNtceWcCFoasZsN-eQl3hdXk5i8Ftv9N_zGmqzL0Z9xvHnP0KcfMGiFh0VjLblSHEgW5L6snij_mAWyJ_6Z7xY7_3E07YPATyMFbWZFYr8BARH6b5ak66sS5IV2RQL3Qh0GkOxjmoXutknxPQPacLtM1KubOhOwQTv80eGhNUrqTNFiAguB3LlAJ-1AFxs5Ymr4eBUubB3Eu6GLx9A_szbKSmhxf8q0obOUsPf1d3SwqpKwXJPqFQvAXCN7tdGWxuBWPDq8wrxtG9FYUKtx31p_m_eMF1XSFcB3ahVHl97ZTh_31gHk8wg3Shnjqb0ue37BDazGvUE8LfTs08nsPj8o_dw4DSc9aBf1_JNdxPZZiLy6qaxKaCZ71e1MlGqBun6i3O1GHFDUWSbO82_E_atGGQ9flhJ_8Vauh2r0wDE7thsqkONakWz5u18WGM_REOS0H4jt-N1uzHawn9eA_KXPGoXvJ3O7wDYVOjNjMcybvsRChh8YZ1YMDH959t20xCpSTJ8VdPThf0yCqA2L1bM2Ku1Hisb10ZXyVg5pEbzGmUhAn2pxb372x3AVVLX3l1-qn0opZOdZK8Tz_yQ0Ek32SwhIAxIaJeMJo3s_Pr_YQyCjXujcuBx2wyk779pBfXbDyVcUJXcEOoWrR7GAcaj2rOTE5UdBzU-mv0qWt43olV8482hRdIgMgc2R2H-l2idfYHu-30VQLtt_07gYNFPxxAN9l1eEZrZJ\r\nheader = Upgrade-Insecure-Requests    value = 1\r\nheader = sec-ch-ua    value = \"Google Chrome\";v=\"135\", \"Not-A.Brand\";v=\"8\", \"Chromium\";v=\"135\"\r\nheader = sec-ch-ua-mobile    value = ?0\r\nheader = sec-ch-ua-platform    value = \"Windows\"\r\nheader = sec-fetch-site    value = none\r\nheader = sec-fetch-mode    value = navigate\r\nheader = sec-fetch-user    value = ?1\r\nheader = sec-fetch-dest    value = document\r\nheader = priority    value = u=0, i\r\n","@l":"Error","@tr":"5132a23fa8fb046fac69f8e0f055b80c","@sp":"3259ec0fc97598ba","SourceContext":"fluentuiBase.Middlewares.ApiExceptionHandlingMiddleware","RequestId":"0HNC9ALR902BB:00000019","RequestPath":"/api/weathers/ray","ConnectionId":"0HNC9ALR902BB","ClientIp":"::1","MyExpense":null,"ApplicationName":"Blazor Log Base"}
{"@t":"2025-05-02T08:45:02.2709529Z","@mt":"An unhandled exception has occurred, No service for type 'Microsoft.Extensions.Logging.ILogger' has been registered.","@l":"Error","@x":"System.InvalidOperationException: No service for type 'Microsoft.Extensions.Logging.ILogger' has been registered.\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)\r\n   at lambda_method75(Closure, Object, HttpContext)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)\r\n   at fluentuiBase.Middlewares.ApiExceptionHandlingMiddleware.Invoke(HttpContext context) in C:\\data\\sources\\dotwork\\fluentuiBase\\fluentuiBase\\Middlewares\\ApiExceptionHandlingMiddleware.cs:line 37","@tr":"5132a23fa8fb046fac69f8e0f055b80c","@sp":"3259ec0fc97598ba","SourceContext":"fluentuiBase.Middlewares.ApiExceptionHandlingMiddleware","RequestId":"0HNC9ALR902BB:00000019","RequestPath":"/api/weathers/ray","ConnectionId":"0HNC9ALR902BB","ClientIp":"::1","MyExpense":null,"ApplicationName":"Blazor Log Base"}
